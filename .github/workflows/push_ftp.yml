name: Deploy Next.js site FTP

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # every Thursday on 1 AM after club meeting
  schedule:
    - cron: "0 3 * * 4" 
  workflow_dispatch:
jobs:
  build:
    env:
      NEXT_PUBLIC_BACKEND_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_API_BASE_URL }}
      NEXT_PUBLIC_BASE_PATH: ${{ secrets.NEXT_PUBLIC_BASE_PATH }}
      NEXT_PUBLIC_IMAGE_STORAGE_PROTOCOL: ${{ secrets.NEXT_PUBLIC_IMAGE_STORAGE_PROTOCOL }}
      NEXT_PUBLIC_IMAGE_STORAGE_HOSTNAME: ${{ secrets.NEXT_PUBLIC_IMAGE_STORAGE_HOSTNAME }}
      NEXT_PUBLIC_IMAGE_STORAGE_PORT: ${{ secrets.NEXT_PUBLIC_IMAGE_STORAGE_PORT }}
      NEXT_PUBLIC_IMAGE_STORAGE_PATHNAME: ${{ secrets.NEXT_PUBLIC_IMAGE_STORAGE_PATHNAME }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: install ncftp
        run: |
          sudo apt-get install -y ncftp
    
      - name: Upload site to FTP.
        env: 
          ftp_location: ${{ secrets.ftp_location }}
          ftp_username: ${{ secrets.ftp_username }}
          ftp_password: ${{ secrets.ftp_password }} 
        run: |
          ncftpput -R -v -u "$ftp_username" -p "$ftp_password" $ftp_location /public_html/ out/*
